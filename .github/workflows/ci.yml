name: 'CI'

on:
  - 'push'
  - 'pull_request'

jobs:
  phpSyntaxCheck:
    name: 'PHP Syntax Check (${{ matrix.php.version }})'

    strategy:
      matrix:
        php:
          - version: '8.0'
            experimental: false

          - version: '8.1'
            experimental: true

    runs-on: 'ubuntu-20.04'

    steps:
      - uses: 'actions/checkout@v2'

      - name: 'Set up PHP ${{ matrix.php.version }}'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php.version }}'

      - name: 'Syntax Check'
        continue-on-error: '${{ matrix.php.experimental }}'
        env:
          LANG: 'C'
        run: |
          find . \( -type d \( -name '.git' -or -name 'vendor' -or -name 'node_modules' -or -name 'runtime' \) -prune \) -or \( -type f -name '*.php' -print \) \
            | sort \
            | xargs -n 1 php -l

  makeComposerCache:
    name: 'Make composer cache'

    runs-on: 'ubuntu-20.04'

    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 'Set up PHP 8.0'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '8.0'

      - name: 'Install Composer dependencies'
        run: 'composer install --prefer-dist'

  phpStyleCheck:
    name: 'PHP Coding Style'

    runs-on: 'ubuntu-20.04'

    needs:
      - 'phpSyntaxCheck'
      - 'makeComposerCache'

    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: 'Set up PHP 8.0'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '8.0'

      - name: 'Check Styles'
        run: |
          make app-config
          make check-style-php

  phpTest:
    name: 'PHP Test (${{ matrix.php.version }})'

    strategy:
      matrix:
        php:
          - version: '8.0'
            experimental: false

          - version: '8.1'
            experimental: true

    runs-on: 'ubuntu-20.04'

    needs:
      - 'phpSyntaxCheck'
      - 'makeComposerCache'

    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/setup-node@v2'
        with:
          node-version: 'lts/*'

      - uses: 'actions/cache@v2'
        with:
          path: |
            ~/.cache/composer/files
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: 'Set up PHP ${{ matrix.php.version }}'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php.version }}'

      - name: 'Set Up Environment'
        continue-on-error: '${{ matrix.php.experimental }}'
        run: 'make -j'

      - name: 'Run Unit Test'
        continue-on-error: '${{ matrix.php.experimental }}'
        run: 'make test'

  jsStyleCheck:
    name: 'JS Coding Style'

    runs-on: 'ubuntu-20.04'

    steps:
      - uses: 'actions/checkout@v2'

      - uses: 'actions/setup-node@v2'
        with:
          node-version: 'lts/*'

      - run: 'make check-style-js'
